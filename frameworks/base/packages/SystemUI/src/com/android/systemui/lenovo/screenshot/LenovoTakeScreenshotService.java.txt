/*
 * Copyright (C) 2011 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.android.systemui.lenovo.screenshot;

import android.app.Service;
import android.content.Intent;
import android.os.Handler;
import android.os.IBinder;
import android.os.Message;
import android.os.Messenger;
import android.os.RemoteException;
import android.util.Log;
//shiyaru@wind-mobi.com add 2018.5.30 start
import com.android.systemui.scrollshot.ScrollShotListener;
import com.android.systemui.scrollshot.ScrollShot;
//shiyaru@wind-mobi.com add 2018.5.30 end

public class LenovoTakeScreenshotService extends Service implements ScrollShotListener {
    private static final String TAG = ScreenShotUtil.TAG + ".TakeScreenshotService";

    private static LenovoGlobalScreenshot mScreenshot;
    private AreaScreenshotView areaScreenshotView;
    private Messenger mCallback;
    private boolean bShowNotify;
    //shiyaru@wind-mobi.com modify scrollscreenshot bitmap preview 2018.5.30 start
    private boolean isScroll;
    //shiyaru@wind-mobi.com modify scrollscreenshot bitmap preview 2018.5.30 end

    private Handler mHandler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            Log.d(TAG, "handleMessage");
            switch (msg.what) {
                case 1:
                    mCallback = msg.replyTo;
                    /* Lenovo-sw ligr3 modified 2015-02-06 begin, for checking storage */
                    int flag = ScreenShotUtil.checkMemory();
                    Log.d(TAG, "handleMessage------flag: " + flag);
                    if(flag != 0){
                        ScreenShotUtil.handleError(getApplicationContext(), flag);
                        try {
                            mCallback.send(Message.obtain(null, 1));
                        } catch (RemoteException e) {
                            Log.e(TAG, "Error send reply: " + e.toString());
                        }
                        return;
                    }
                    /* Lenovo-sw ligr3 modified 2015-02-06 end, for checking storage */
                    //shiyaru@wind-mobi.com modify scrollscreenshot bitmap preview 2018.5.30 start
                    if (mScreenshot == null) {
                        mScreenshot = new LenovoGlobalScreenshot(LenovoTakeScreenshotService.this, bShowNotify, LenovoTakeScreenshotService.this);
                    } else{
                        mScreenshot.setIfShowNotification(bShowNotify);
                    }
                    areaScreenshotView =  AreaScreenshotView.getAreaScreenshotView(getApplicationContext());
                    areaScreenshotView.setScreenshotService(LenovoTakeScreenshotService.this);
                    areaScreenshotView.setGlobalScreenshot(mScreenshot);
                    mScreenshot.setIsScroll(isScroll);
                    //shiyaru@wind-mobi.com modify scrollscreenshot bitmap preview 2018.5.30 end
                    mScreenshot.takeScreenshot(new Runnable() {
                        @Override public void run() {
                            Message reply = Message.obtain(null, 1);
                            try {
                                mCallback.send(reply);
                            } catch (RemoteException e) {
                            }
                        }
                    }, msg.arg1 > 0, msg.arg2 > 0);
            }
        }
    };

    /**
    *  取消截图时调用，解除服务的绑定
    */
    public void unbindService() {
        Log.d(TAG, "unbindService");
        Message reply = Message.obtain(null, 1);
        try {
            if(mCallback != null){
                mCallback.send(reply);
            }
        } catch (RemoteException e) {
        }
    }
    //shiyaru@wind-mobi.com modify scrollscreenshot bitmap preview 2018.5.30 start
    @Override
    public IBinder onBind(Intent intent) {
        Log.d(TAG, "onBind");
        bShowNotify = intent.getBooleanExtra("SHOW_NOTIFY", true);
        isScroll = intent.getBooleanExtra("isScroll", false);
        return new Messenger(mHandler).getBinder();
    }

    @Override
    public void onFinish() {
        unbindService();
    }
    //shiyaru@wind-mobi.com modify scrollscreenshot bitmap preview 2018.5.30 end
}
